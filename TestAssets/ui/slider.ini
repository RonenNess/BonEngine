; This file describes the stylesheet of a UI horizontal slider.
; Note: for demonstration purposes it contains all options, but most of them have default values and you don't have to provide.

; base element stuff
[style]
width = 100%                                 	; slider takes max width by default.
height = 28p                                	; slider height = 28 pixels.
padding = 24,0,24,0                           	; add padding from boundaries for child elements.
margin = 0,0,0,6                           	; add extra margin when auto-arranging elements.
origin = 1,0                                    ; origin is top-left corner. this means this element position represents its top-left corner.
anchor = 1,0                                    ; anchor is top-left corner. this means this element position will be set to its parent top-left (+ offset).
ignore_padding = false				; if true, will ignore parent's padding.

; image element stuff
[image]
image_path = slider.png         			; image to load for slider background.
color = 255,255,255,255     	            		; natural color.
color_highlight = 255,255,255,255       		; color when pointing on image.
color_pressed = 255,255,255,255       			; color when pressing on image.
source_rect = 0,0,32,7                                   ; image source rect (all 0 for entire image).
source_rect_highlight = 0,0,32,7                         ; image source rect while being pointed on (all 0 for entire image).
source_rect_pressed = 0,0,32,7                           ; image source rect while being pressed (all 0 for entire image).
blend = alpha                                           ; image blend mode (opaque / alpha / additive / mod / multiply).
type = sliced						; image drawing type (stretch / tiled / sliced / single).
texture_scale = 4.0					; source image texture scale when in tiled / sliced mode.
sliced_sides = 6,0,6,0					; sides of the sliced image in pixels.

[slider]
handle_style = slider_handle.ini		; slider handle.
active_slider_rect = 2,8,28,7

; element behavior
[behavior]
interactive = true			; should this element respond to user input?
capture_input = true			; should this element capture input events? 
copy_parent_state = false		; should this element copy its parent state?
draggable = false			; users can't drag this element.
limit_drag_to_parent = true		; limit dragging to parent region.